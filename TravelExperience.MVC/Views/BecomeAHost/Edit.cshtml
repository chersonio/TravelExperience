@model TravelExperience.MVC.ViewModels.AccommodationFormViewModel

@{
    ViewBag.Title = "Edit";
}


<link rel="stylesheet" href="//code.jquery.com/ui/1.13.0/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-3.6.0.js"></script>
<script src="https://code.jquery.com/ui/1.13.0/jquery-ui.js"></script>

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "BecomeAHost", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    if (Model.ErrorMessageTop != null && Model.ErrorMessageTop.Any())
    {
        foreach (string line in Model.ErrorMessageTop)
        {
            <strong class="text-danger">* @line</strong>
            <br />
        }
    }

    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Accommodation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Accommodation.AccommodationID)

        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Accommodation.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Accommodation.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Accommodation.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Accommodation.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.AccommodationType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Accommodation.AccommodationType, new SelectList(Enum.GetValues(typeof(TravelExperience.DataAccess.Core.Entities.AccommodationType)), "AccommodationType"))

                @Html.ValidationMessageFor(model => model.Accommodation.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Shared Accommodation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.CheckBoxFor(model => model.Accommodation.Shared)
            </div>



            @Html.ValidationMessageFor(model => model.Accommodation.Shared, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.MaxCapacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.TextBoxFor(model => model.Accommodation.MaxCapacity, new { @class = "form-control", type = "number" })

                @Html.ValidationMessageFor(model => model.Accommodation.MaxCapacity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.Floor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div>
                @Html.TextBoxFor(model => model.Accommodation.Floor, new { @class = "form-control", type = "number" })

                @Html.ValidationMessageFor(model => model.Accommodation.Floor, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.PricePerNight, htmlAttributes: new { @class = "control-label col-md-2" })

            <div>
                @Html.TextBoxFor(model => model.Accommodation.PricePerNight, new { @class = "form-control", type = "number" })
            </div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.AvailableFromDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Accommodation.AvailableFromDate, new { @class = "form-control datepicker", Value = Model.Accommodation.AvailableFromDate.ToString("dd/MM/yyyy").Replace(" ", "/") })
                @Html.ValidationMessageFor(model => model.Accommodation.AvailableFromDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Accommodation.AvailableToDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.TextBoxFor(model => model.Accommodation.AvailableToDate, new { @class = "form-control datepicker", Value = Model.Accommodation.AvailableToDate.ToString("dd/MM/yyyy").Replace(" ", "/") })
                @Html.ValidationMessageFor(model => model.Accommodation.AvailableToDate, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="container" style="display: flex; grid-template-columns: 1fr 1fr; grid-gap: 10px;">
            @Html.LabelFor(model => model.Accommodation.Utilities, htmlAttributes: new { @class = "control-label col-md-2" })
                  <div class="form-group">
                @Html.DisplayName("")
                @for (int i = 0; i < (Model.UtilitiesForCheckboxes.Count()); i++)
                {

                    @Html.HiddenFor(m => m.UtilitiesForCheckboxes[i].UtilityName)
                    @Html.HiddenFor(m => m.UtilitiesForCheckboxes[i].UtilitiesEnum)
                    @Html.CheckBoxFor(m => m.UtilitiesForCheckboxes[i].IsChecked)
                    @Html.DisplayFor(m => m.UtilitiesForCheckboxes[i].UtilitiesEnum)


                    <br />
                }
            </div>
        </div>
        <!--< div class= "form-group" >
        < div >
        < strong > Your appartment </ strong > -->
        @*<img src="~/Images/@Url.Content(Model.Thumbnail.ToString())" ,class="control-label col-md-2" />*@
        <!--</div>
        </div>
        <div>
            <strong>Upload another photo?</strong>
            <div>
                @Html.TextBoxFor(m => m.Thumbnail, htmlAttributes: new { @class = "form-control", type = "file", multiple = true, accept = "image/*" })

                @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
            </div>
        </div>-->


        <h3>Changed something at the location?</h3>
        <div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location.Address, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location.AddressNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location.AddressNo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location.AddressNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location.City, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location.City, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location.Country, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Location.Country, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Dashboard", "DashboardHost")
</div>


<script>
    $('.datepicker').datepicker({
        dateFormat: 'dd/mm/yy'
    });
</script>
