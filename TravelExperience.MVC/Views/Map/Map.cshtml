@model TravelExperience.MVC.ViewModels.MapViewModel
@{ ViewBag.Title = "Map"; }

<style>
</style>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCLxLZZ4ElJQCQT_Ppnc_KoQC30aESetyE&callback=initMap"
        async defer></script>

<div id="map">
    <script>
            var map;
            function initMap() {
                map = new google.maps.Map(document.getElementById('map'), {
                    center: { lat: 37.98096185419733, lng: 23.732283397775806 },
                    zoom: 10
                });
                   $.get("@Url.Action("GetLocation", "Map")", function (dataFromView, status) {
                    var data = JSON.parse(dataFromView);
                    var marker = [];
                    var contentString = [];
                    var infowindow = [];
                    for (var i = 0; i < data.length; i++) {
                        marker[i] = new google.maps.Marker({
                            position: new google.maps.LatLng(data[i].Xcoord, data[i].Ycoord),
                            map: map
                        });
                        contentString[i] = '<div id="content">' +
                            '<div id="siteNotice">' +
                            '</div>' +
                            '<h1 id="firstHeading" class="firstHeading>' + data[i].Address + '</h1>';
                        infowindow[i] = new google.maps.InfoWindow({
                            content: contentString[i]
                        });
                        var mdl = marker[i];
                        google.maps.event.addListener(marker[i], 'mouseover', (function (mdl, i) {
                            return function () {
                                infowindow[i].open(map, marker[i]);
                            }
                        })(marker[i], i));
                        google.maps.event.addListener(marker[i], 'mouseout', (function (mdl, i) {
                            return function () {infowindow[i].close();
                            }
                        })(marker[i], i));
                    }
                })

            }
    </script>

   

</div>

