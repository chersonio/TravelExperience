@model TravelExperience.MVC.ViewModels.AccommodationFormViewModel
@{
    ViewBag.Title = "New";
}


@using (Html.BeginForm("New", "Accommodation", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    if (Model.ErrorMessage != null && Model.ErrorMessage.Any())
    {
        foreach (string line in Model.ErrorMessage)
        {
            <strong class="text-danger">* @line</strong>
            <br />
        }
    }

    <div class="container" style="display: flex; grid-template-columns: 1fr 1fr; grid-gap: 10px; ">

        <div>
            @*@Html.Partial("_Map", Model)*@

            <h3>Where's your place located?</h3>
            <div>
                <div class="form-group">
                    <strong>Street Address</strong>
                    @Html.TextBoxFor(model => model.Accommodation.Location.Address, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Accommodation.Location.Address, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <strong>Street Address Number</strong>
                    @Html.TextBoxFor(model => model.Accommodation.Location.AddressNo, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Accommodation.Location.AddressNo, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Accommodation.Location.City)
                    @Html.TextBoxFor(model => model.Accommodation.Location.City, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Accommodation.Location.City, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Accommodation.Location.Country)
                    @Html.TextBoxFor(model => model.Accommodation.Location.Country, new { @class = "form-control" })

                    @Html.ValidationMessageFor(model => model.Accommodation.Location.Country, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br />


        <div style="flex-grow:1;">
            <h2 style="color:#510e0e; text-decoration:underline;">Add a new accommodation</h2>
            <div class="form-group">
                <strong>Let's give your place a name</strong>
                @Html.TextBoxFor(model => model.Accommodation.Title, new { @class = "form-control" })

                @Html.ValidationMessageFor(model => model.Accommodation.Title, "", new { @class = "text-danger" })

            </div>

            <div class="form-group">
                <strong>Now, let's describe your place</strong>
                @Html.TextAreaFor(model => model.Accommodation.Description, new { @class = "form-control", style = "width: 300px; height: 100px;" })

                @Html.ValidationMessageFor(model => model.Accommodation.Description, "", new { @class = "text-danger" })
            </div>

            @*// AccommodationType DropDown *@
            <div class="form-group">
                <strong>What kind of place will you host?</strong> <br />
                @Html.DropDownListFor(model => model.Accommodation.AccommodationType, new SelectList(Enum.GetValues(typeof(TravelExperience.DataAccess.Core.Entities.AccommodationType)), "AccommodationType"))
            </div>

            <div class="form-group">
                @Html.CheckBoxFor(model => model.Accommodation.Shared)
                @Html.Label("Shared Accommodation")

                @Html.ValidationMessageFor(model => model.Accommodation.Shared, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <strong>How many guests would you like to welcome?</strong>
                @Html.TextBoxFor(model => model.Accommodation.MaxCapacity, new { @class = "form-control", type = "number" })

                @Html.ValidationMessageFor(model => model.Accommodation.MaxCapacity, "", new { @class = "text-danger" })
            </div>

            <h3>Give dates of availability</h3>
            <div class="form-group">
                @Html.Label("Begin date of your hosting")<br />
                @Html.TextBoxFor(m => m.Booking.BookingStartDate, "", new { type = "date" }) <br />

                @Html.Label("Ending date of your hosting")<br />
                @Html.TextBoxFor(m => m.Booking.BookingEndDate, "", new { type = "date" }) <br />
            </div>
            <h3>Let guests know what your place has to offer</h3>

            @*----FOR CHECKBOXES----*@
            <div class="container" style="display: flex; grid-template-columns: 1fr 1fr; grid-gap: 10px;">
                <div class="form-group">
                    @for (int i = 0; i <= 8; i++)
                    {
                        @Html.HiddenFor(m => m.UtilitiesForCheckboxes[i].UtilityName)
                        @Html.HiddenFor(m => m.UtilitiesForCheckboxes[i].UtilitiesEnum)
                        @Html.CheckBoxFor(m => m.UtilitiesForCheckboxes[i].IsChecked)
                        @Html.DisplayFor(m => m.UtilitiesForCheckboxes[i].UtilitiesEnum)
                        <br />
                    }
                </div>
                <div class="form-group" style=" flex-grow:1;">
                    @for (int i = 9; i <= 17; i++)
                    {
                        @Html.HiddenFor(m => m.UtilitiesForCheckboxes[i].UtilityName)
                        @Html.HiddenFor(m => m.UtilitiesForCheckboxes[i].UtilitiesEnum)
                        @Html.CheckBoxFor(m => m.UtilitiesForCheckboxes[i].IsChecked)
                        @Html.DisplayFor(m => m.UtilitiesForCheckboxes[i].UtilitiesEnum)
                        <br />
                    }
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Accommodation.Floor)
                @Html.TextBoxFor(model => model.Accommodation.Floor, new { @class = "form-control", type = "number" })

                @Html.ValidationMessageFor(model => model.Accommodation.Floor, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <strong>Next, let's add some photos of your place</strong>
                @Html.TextBoxFor(m => m.Thumbnail, htmlAttributes: new { @class = "form-control", type = "file", multiple = true, accept = "image/*" })

                @Html.ValidationMessageFor(model => model.Thumbnail, "", new { @class = "text-danger" })
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Accommodation.PricePerNight) / Day
                @Html.TextBoxFor(model => model.Accommodation.PricePerNight, new { @class = "form-control", type = "number" })
                @Html.ValidationMessageFor(model => model.Accommodation.PricePerNight, "", new { @class = "text-danger" })

            </div>
        </div>


    </div>
    <button type="submit" class="btn btn-primary btn-lg">Save</button>
}
